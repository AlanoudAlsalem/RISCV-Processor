module IFU(
    input reset,
    output [31:0] Instruction_Code
);
reg [31:0] PC = 32'b0;  // 32-bit program counter is initialized to zero

    // Initializing the instruction memory block
    INST_MEM instr_mem(PC,reset,Instruction_Code);//Include instruction memory module

    always @(*)
    begin
        if(reset == 1)  //If reset is one, clear the program counter
        PC <= 0;
        else
        PC <= PC+4;   // Increment program counter on positive clock edge
    end

endmodule



module stimulus(

);
    reg reset;
    wire [31:0] Instruction_Code;

    // Initializing IFU module
    IFU IFU_module(.reset(reset),.Instruction_Code(Instruction_Code));

    //Initial inputs
    reset = 0;

    // Apply reset
    initial
    begin
        #20 
        reset = 1'b1;
        #20
        reset = 1'b0;
    end

    #20 
    $finish;
    //display code
endmodule